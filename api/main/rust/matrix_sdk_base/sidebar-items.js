initSidebarItems({"attr":[["async_trait",""]],"enum":[["Error","Internal representation of errors."],["RoomType","Enum keeping track in which state the room is, e.g. if our own user is joined, invited, or has left the room."],["TimelineStreamError","Errors in a timeline stream"]],"mod":[["deserialized_responses",""],["executor","Abstraction over an executor so we can spawn tasks under WASM the same way we do usually."],["instant",""],["locks",""],["media","Common types for media content."],["ruma","Types and traits for working with the Matrix protocol."],["store","The state store holds the overall state for rooms, users and their profiles and their timelines. It is an overall cache for faster access and convenience- accessible through `Store`."],["util",""]],"struct":[["BaseClient","A no IO Client implementation."],["Room","The underlying room data structure collecting state for joined, left and invited rooms."],["RoomInfo","The underlying pure data structure for joined and left rooms."],["RoomMember","A member of a room."],["Session","A user session, containing an access token and information about the associated user account."]],"trait":[["AsyncTraitDeps","Super trait that is used for our store traits, this trait will differ if itâ€™s used on WASM. WASM targets will not require `Send` and `Sync` to have implemented, while other targets will."]],"type":[["Result","Result type of the rust-sdk."]]});